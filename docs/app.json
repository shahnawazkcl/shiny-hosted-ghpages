[{"name":"app.R","content":"source(\"ui.R\")\r\nsource(\"server.R\")\r\n\r\nshinyApp(ui = ui, server = server)\r\n","type":"text"},{"name":"server.R","content":"#server logic\r\n# server <- function(input, output) {\r\n#   observeEvent(input$show_name, {\r\n#     output$output_text <- renderText({\r\n#       paste(\"Hello,\", input$name, \"Welcome to the DataPulse Dashboard!\")\r\n#     })\r\n#   })\r\n#   \r\n#   output$sample_plot <- renderPlot({\r\n#     hist(rnorm(100), main = \"Sample Histogram\", xlab = \"Value\")\r\n#   })\r\n#   # Call module server here\r\n#   example_module_server(\"example1\")\r\n# }\r\n\r\nserver <- function(input, output, session) {\r\n  subsetted <- reactive({\r\n    req(input$species)\r\n    df |> filter(Species %in% input$species)\r\n  })\r\n  \r\n  output$scatter <- renderPlot({\r\n    p <- ggplot(subsetted(), aes(!!input$xvar, !!input$yvar)) + list(\r\n      theme(legend.position = \"bottom\"),\r\n      if (input$by_species) aes(color = Species),\r\n      geom_point(),\r\n      if (input$by_island) aes(color = Island),\r\n      geom_point(),\r\n      if (input$smooth) geom_smooth()\r\n    ) + list(\r\n        if (input$by_year) facet_grid(cols = vars(Year)),\r\n        if (input$by_gender) facet_grid(cols = vars(Sex))\r\n            \r\n    )\r\n    \r\n    if (input$show_margins) {\r\n      margin_type <- if (input$by_species) \"density\" else \"histogram\"\r\n      p <- ggExtra::ggMarginal(p, type = margin_type, margins = \"both\",\r\n                               size = 8, groupColour = input$by_species, groupFill = input$by_species)\r\n    }\r\n    \r\n    p\r\n  }, res = 100)\r\n}\r\n","type":"text"},{"name":"ui.R","content":"# user interface\r\n\r\n# ui <- fluidPage(\r\n#   theme = bs_theme(version = 5, bootswatch = \"flatly\"),\r\n#   titlePanel(windowTitle = \"DataPulse Dashboard\"),\r\n#   sidebarLayout(\r\n#     sidebarPanel(\r\n#       helpText(\"Welcome to the DataPulse Dashboard\"),\r\n#       textInput(\"name\", \"Enter your name:\", \"\"),\r\n#       actionButton(\"show_name\", \"Submit\"),\r\n#       #helper(\"show_name\", type = \"inline\", content = \"Click to display your name in the main panel below.\")\r\n#       # Add module UI here\r\n#       example_module_ui(\"example1\")\r\n#     ),\r\n#     mainPanel(\r\n#       textOutput(\"output_text\"),\r\n#       plotOutput(\"sample_plot\")\r\n#     )\r\n#   )\r\n# )\r\n\r\nui <- page_sidebar(\r\n  theme = bs_theme(version = 5, bootswatch = \"flatly\"),\r\n  titlePanel(\"Penguins..!\", windowTitle = \"DataPulse Dashboard\"),\r\n  sidebar = sidebar(\r\n    varSelectInput(\"xvar\", \"X variable\", df_num, selected = \"Bill Length (mm)\"),\r\n    varSelectInput(\"yvar\", \"Y variable\", df_num, selected = \"Bill Depth (mm)\"),\r\n    checkboxGroupInput(\r\n      \"species\", \"Filter by species\",\r\n      choices = unique(df$Species), \r\n      selected = unique(df$Species)\r\n    ),\r\n    hr(), # Add a horizontal rule\r\n    checkboxInput(\"by_species\", \"Show species\", TRUE),\r\n    checkboxInput(\"show_margins\", \"Show marginal plots\", TRUE),\r\n    checkboxInput(\"by_island\", \"Show islands\", FALSE),\r\n    checkboxInput(\"smooth\", \"Add smoother\"),\r\n    hr(), # Add a horizontal rule\r\n    checkboxInput(\"by_year\", \"facet by year\", FALSE),\r\n    checkboxInput(\"by_gender\", \"facet by genders\", FALSE),\r\n  ),\r\n  plotOutput(\"scatter\")\r\n)\r\n\r\n","type":"text"},{"name":"data/penguins_data.Rdata","content":"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\nvI9LnollX7/tm/f5rN5sbVmP9WShjmC3/bGegDfuJ47Zs7X1esBn/ApPfdnXZf3HTt2Ke4T9\nIZ7JgrdbvIiXONRL/BNeN/zo7Ct6afYlv87+a+JRH3GoR+ucU8Y3esBveDK/bv2Tn81Jwe+H\nX/pv+Atr6za3ubTvC+MTOzgV185hrds5gM4++dv5zfqQt9u5pH2cO5wn9h5hn+LYe584Q2Fd\ndcT3V/y+4Zy081J+9r4aCnjQiYNc9jp9s/fVCb9uuObXlrF++hDfL+Q1fgoen+2nnmVv570E\n/xOKa98B7FsO+wuhztwv4zv29L58/fS5XP56dFXanL3+v3z9jZ9JPp7LCz25PPVgLs+9LP8/\naN8/pWc+/vl2byf++Re1/wPFG5f9uPYXfJwzf/M68tTvfN6FV/x+1Vc887THazr5v+X9LK72\nX9gZ4st/4RFf52vT0t9XPW9r/Tu+fvKd2i/9sref/WUuTy54/sBF/SfL0vd5fMZ7IcQr+zpf\nb1H+ZuH8s/wPeX/qJT/4wcU8oMf9Z4u5pE8XnvJ1WP9b1q4TnsANLsMDf8c9fvqH3fBeER8L\nvv7TXxO+Y7lc2OLrO/lOwLfP17vwJ/m/Jvs/hOd9X/+5Re939i8ez+lnPB/MKf2FD+blTP4v\nkK1/xvfPff3X2D/w8ZDnf6T4b69d39n7ZD/u+UHnnCAfvPJ8cL7gx37qgVf6BV7OjUuaY/qM\n/uZXtf77XF5YyuXFx7TeLv3rsuu5fvOM1y+pz8yl6Zr737wS4r/rcSw+6/Mt/tavL/5L8TR3\nl76o/e97PBd/qjxP+ThvverroO7F73k/5hx8PD/gZC4uvODzLn7D12/xhfviRfm953Wr91kf\nB9zkM34O+bzki/HgBx7Ab/1a8Hbr5wsBD/gfC/HkD/9vTXv/t3R+X/iC4g9K1zkBv8bjso9H\nPYv3eHz0C37xt3rhV3gXv+3jgMfm5D2ff3FK+o89XtOf8vr5v3sd3qz+nWH/V4T3HY8L/oTX\nvi/Ad+n7vi7qt3Ne5w3nxKnncsk5Et/vnBfxvWTfC8/4dd6Hp/7t9fg9Y98r7VovaP14Lu28\nPuf9wcE+7MTlfLL3Ae+v8D6O798zX8ol586vOO9e9LwYb3pPwesbl7T/kMdHfvhkH++H+N6F\nL/DCE/7Y7f393Nr4kJzvxtczngfpmf/vwpsnh+v2U+u16hpalm292vi15p6P9m52vh8lPy7m\nx6P7ZDiu33I9/uuP7eYi+DQTkiy3tmUjPx/Jkiwb41m4fRBszHr8G+rzzOWtifrGW65nAhLL\nt950frZ9vnmobuQ39K35jbaRsW3kSm9Wt9e/P+tZKf828Bf6078kN4gcSnJDydEkN7Rc7+d1\no8mhJG+qXO/5/7zL9X6ePu/P53r399PJzP8db1tnpn7QdnR4sjrbUO5t/LNpvvE/V69eWQgb\nN7Npe7by98Hli3c+MV0dmWgs61N5YLY+fHRU2vbSRL1e2Fc9OjY3XnhocvKbWr9/db1cnfbL\nD/TWJ6anqzNreNxbmhr9YeHR4dnZwkNjLDY9UX2az/UD1eGZgLd5tgFNf31dU6Ms/TV2q3ok\nYfNIvRFbtW0Cz8hUvV4dmZuaOTgyPjwzPDJXnYE0MzWUKz7o5qs3KM72D+OMTh07ZP//5HYO\ncrO5XXFuwnljPgQfW+v9H9Y6dqw6O/sRpa768IDc0RJqbyJpw4sId45Wa8PH6nM8VCt/wdNk\nAEHAuxp+B/MnFF4/tE3PTDVaMLnyQH5ZYK6EOM3ae89KjINzh+oHR2vw77Smhqbf3j06PDfc\nVptpnGNrZN0yWjt49NikyFv5CYp0qdiqP3WrrnSpmOLJni4VEx+S6VIxPz/pUjHZhTtdKqb8\n2IUnXSqmvmGnLsVPl4r5OUqXiik+OISzH9z467lMl4rlcdKlYrk9XSomnvEnnupLl4ppXjOP\nI10qpnkJvKVLxfI46VIx1RP5DvZ0qZj0HX5u0qVieTw7lzg3Ofc4J7CH91K6VEz8USf5ta9z\n3uvpUjHtE650qViIgxzy6+lSsWAveH+rZ8n7pUvFfNx0qVgu06ViPl+6VCzUdSLIgrenS8Wk\nYy/4/elSsbCuOtKlYr7edKmY7Me1v+DjpEvFPK50qVjAA3/HPf50qZivP10qJj1dKpbbNRfp\nUjHlS5eKOT1dKqY627Ve0PrxXKZLxTxPN/xSMffzwM03+sedV9NtWkm3xn+ksDn+WPIn/xng\n7Mr/ASHtlpQRnwAA","type":"binary"},{"name":"global.R","content":"library(shiny)\r\nlibrary(shinyhelper)\r\nlibrary(bslib)\r\nlibrary(dplyr)\r\nlibrary(ggplot2)\r\nlibrary(ggExtra)\r\n\r\npenguins_csv <- \"https://raw.githubusercontent.com/jcheng5/simplepenguins.R/main/penguins.csv\"\r\n\r\ndf <- readr::read_csv(penguins_csv)\r\n# Find subset of columns that are suitable for scatter plot\r\ndf_num <- df |> select(where(is.numeric), -Year)\r\n\r\nif(!file.exists('data/penguins_data.Rdata')) {\r\n  save(df, df_num, file = 'data/penguins_data.Rdata')\r\n}\r\n\r\n","type":"text"},{"name":"modules/example_module.R","content":"example_module_ui <- function(id) {\r\n  ns <- NS(id)\r\n  tagList(\r\n    textInput(ns(\"input_text\"), \"Enter some text:\"),\r\n    textOutput(ns(\"output_text\"))\r\n  )\r\n}\r\n\r\nexample_module_server <- function(id) {\r\n  moduleServer(\r\n    id,\r\n    function(input, output, session) {\r\n      output$output_text <- renderText({\r\n        paste(\"You entered:\", input$input_text)\r\n      })\r\n    }\r\n  )\r\n}\r\n","type":"text"}]
